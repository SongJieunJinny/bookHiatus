<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
			"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.bookGap.mapper.orderMapper">

  <!-- Book + ProductApiVO 매핑 -->
  <resultMap id="BookWithApiMap" type="com.bookGap.vo.BookVO">
    <id     property="bookNo"                column="BOOK_NO"/>
    <result property="bookRdate"             column="BOOK_RDATE"/>
    <result property="bookTrans"             column="BOOK_TRANS"/>
    <result property="bookStock"             column="BOOK_STOCK"/>
    <result property="bookState"             column="BOOK_STATE"/>
    <result property="bookCategory"          column="BOOK_CATEGORY"/>
    <result property="isbn"                  column="ISBN"/>
    <result property="bookImgUrl"            column="BOOK_IMGURL"/>
    <result property="bookIndex"             column="BOOK_INDEX"/>
    <result property="publisherBookReview"   column="PUBLISHER_BOOK_REVIEW"/>
    <result property="commentCount"          column="COMMENT_COUNT"/>

    <association property="productInfo" javaType="com.bookGap.vo.ProductApiVO">
      <id     property="isbn"          column="API_ISBN"/>
      <result property="title"         column="TITLE"/>
      <result property="author"        column="AUTHOR"/>
      <result property="publisher"     column="PUBLISHER"/>
      <result property="pubdate"       column="PUBDATE"/>
      <result property="discount"      column="DISCOUNT"/>
      <result property="description"   column="DESCRIPTION"/>
      <result property="link"          column="LINK"/>
      <result property="image"         column="IMAGE"/>
    </association>
  </resultMap>

  <!-- Order + Details + Book(ProductApi 포함) -->
  <resultMap id="OrderResultMap" type="com.bookGap.vo.OrderVO">
    <!-- Order -->
    <id     property="orderId"              	column="O_ORDER_ID"/>
    <result property="orderDate"            	column="ORDER_DATE"/>
    <result property="orderStatus"          	column="ORDER_STATUS"/>
    <result property="totalPrice"           	column="TOTAL_PRICE"/>
    <result property="orderType"            	column="ORDER_TYPE"/>
    <result property="userId"               	column="USER_ID"/>
    <result property="guestId"              	column="GUEST_ID"/>
    <result property="cartNo"               	column="CART_NO"/>
    <result property="userAddressId"        	column="USER_ADDRESS_ID"/>
    <result property="receiverName"         	column="RECEIVER_NAME"/>
    <result property="receiverPhone"        	column="RECEIVER_PHONE"/>
    <result property="receiverPostCode"     	column="RECEIVER_POST_CODE"/>
    <result property="receiverRoadAddress"  	column="RECEIVER_ROAD_ADDRESS"/>
    <result property="receiverDetailAddress"	column="RECEIVER_DETAIL_ADDRESS"/>
    <result property="deliveryRequest"      	column="DELIVERY_REQUEST"/>
    <result property="orderPassword"        	column="ORDER_PASSWORD"/>

    <!-- Details -->
    <collection property="orderDetails" ofType="com.bookGap.vo.OrderDetailVO">
      <id     property="orderDetailNo"   column="ORDER_DETAIL_NO"/>
      <result property="orderCount"      column="ORDER_COUNT"/>
      <result property="orderPrice"      column="OD_ORDER_PRICE"/>
      <result property="refundCheck"     column="REFUND_CHECK"/>
      <result property="bookNo"          column="BOOK_NO"/>
      <result property="orderId"         column="OD_ORDER_ID"/>

      <!-- Book + ProductApi -->
      <association property="book" javaType="com.bookGap.vo.BookVO">
        <id     property="bookNo"                column="BOOK_NO"/>
        <result property="bookRdate"             column="BOOK_RDATE"/>
        <result property="bookTrans"             column="BOOK_TRANS"/>
        <result property="bookStock"             column="BOOK_STOCK"/>
        <result property="bookState"             column="BOOK_STATE"/>
        <result property="bookCategory"          column="BOOK_CATEGORY"/>
        <result property="isbn"                  column="BOOK_ISBN"/>
        <result property="bookImgUrl"            column="BOOK_IMGURL"/>
        <result property="bookIndex"             column="BOOK_INDEX"/>
        <result property="publisherBookReview"   column="PUBLISHER_BOOK_REVIEW"/>
        <result property="commentCount"          column="COMMENT_COUNT"/>

        <association property="productInfo" javaType="com.bookGap.vo.ProductApiVO">
          <id     property="isbn"          column="API_ISBN"/>
          <result property="title"         column="TITLE"/>
          <result property="author"        column="AUTHOR"/>
          <result property="publisher"     column="PUBLISHER"/>
          <result property="pubdate"       column="PUBDATE"/>
          <result property="discount"      column="DISCOUNT"/>
          <result property="description"   column="DESCRIPTION"/>
          <result property="link"          column="LINK"/>
          <result property="image"         column="IMAGE"/>
        </association>
      </association>
    </collection>
  </resultMap>

  <!-- ================= INSERT / UPDATE / DELETE ================= -->

  <insert id="insertOrder" parameterType="com.bookGap.vo.OrderVO" useGeneratedKeys="true" keyProperty="orderId">
    INSERT INTO ORDERS
    <trim prefix="(" suffix=")" suffixOverrides=",">
      ORDER_DATE,
      ORDER_STATUS,
      TOTAL_PRICE,
      RECEIVER_NAME,
      RECEIVER_PHONE,
      RECEIVER_POST_CODE,
      RECEIVER_ROAD_ADDRESS,
      RECEIVER_DETAIL_ADDRESS,
      DELIVERY_REQUEST,
      ORDER_TYPE,
      <if test="userId != null and userId != ''">
        USER_ID,
        USER_ADDRESS_ID,
      </if>
      <if test="guestId != null and guestId != ''">
        GUEST_ID,
        ORDER_PASSWORD,
      </if>
    </trim>
    VALUES
    <trim prefix="(" suffix=")" suffixOverrides=",">
      NOW(),
      #{orderStatus},
      #{totalPrice},
      #{receiverName},
      #{receiverPhone},
      #{receiverPostCode},
      #{receiverRoadAddress},
      #{receiverDetailAddress},
      #{deliveryRequest},
      #{orderType},
      <if test="userId != null and userId != ''">
        #{userId},
        #{userAddressId},
      </if>
      <if test="guestId != null and guestId != ''">
        #{guestId},
        #{orderPassword},
      </if>
    </trim>
  </insert>

  <insert id="insertOrderDetail" parameterType="com.bookGap.vo.OrderDetailVO">
    INSERT INTO ORDER_DETAIL
      (ORDER_COUNT, ORDER_PRICE, REFUND_CHECK, BOOK_NO, ORDER_ID)
    VALUES
      (#{orderCount}, #{orderPrice}, #{refundCheck}, #{bookNo}, #{orderId})
  </insert>

  <insert id="insertOrderDetailList" parameterType="java.util.List">
    INSERT INTO ORDER_DETAIL
      (ORDER_COUNT, ORDER_PRICE, REFUND_CHECK, BOOK_NO, ORDER_ID)
    VALUES
    <foreach collection="list" item="detail" separator=",">
      (#{detail.orderCount},
       #{detail.orderPrice},
       #{detail.refundCheck},
       #{detail.bookNo},
       #{detail.orderId})
    </foreach>
  </insert>

  <update id="updateBookStock" parameterType="map">
    UPDATE BOOK
       SET BOOK_STOCK = BOOK_STOCK - #{quantity}
     WHERE isbn = #{isbn}
       AND BOOK_STOCK >= #{quantity}
  </update>

  <insert id="addAddress" parameterType="com.bookGap.vo.UserAddressVO">
    INSERT INTO USER_ADDRESS
      (USER_ID, ADDRESS_NAME, USER_NAME, USER_PHONE,
       POST_CODE, ROAD_ADDRESS, DETAIL_ADDRESS, IS_DEFAULT)
    VALUES
      (#{userId}, #{addressName}, #{userName}, #{userPhone},
       #{postCode}, #{roadAddress}, #{detailAddress}, 0)
  </insert>

  <delete id="deleteAddress" parameterType="int">
    DELETE FROM USER_ADDRESS
     WHERE USER_ADDRESS_ID = #{userAddressId}
  </delete>

  <!-- ================= SELECTS ================= -->

  <select id="findAddressByUserAddressId" parameterType="int" resultType="com.bookGap.vo.UserAddressVO">
    SELECT USER_ADDRESS_ID   AS userAddressId,
           ADDRESS_NAME      AS addressName,
           POST_CODE         AS postCode,
           ROAD_ADDRESS      AS roadAddress,
           DETAIL_ADDRESS    AS detailAddress,
           USER_ID           AS userId,
           USER_NAME         AS userName,
           USER_PHONE        AS userPhone,
           IS_DEFAULT        AS isDefault
      FROM USER_ADDRESS
     WHERE USER_ADDRESS_ID = #{userAddressId}
  </select>

  <select id="findDefaultAddressByUserId" parameterType="string" resultType="com.bookGap.vo.UserAddressVO">
    SELECT USER_ADDRESS_ID   AS userAddressId,
           ADDRESS_NAME      AS addressName,
           POST_CODE         AS postCode,
           ROAD_ADDRESS      AS roadAddress,
           DETAIL_ADDRESS    AS detailAddress,
           USER_ID           AS userId,
           USER_NAME         AS userName,
           USER_PHONE        AS userPhone,
           IS_DEFAULT        AS isDefault
      FROM USER_ADDRESS
     WHERE USER_ID = #{userId}
       AND IS_DEFAULT = 1
  </select>

  <select id="findAddressListByUserId" parameterType="string" resultType="com.bookGap.vo.UserAddressVO">
    SELECT USER_ADDRESS_ID   AS userAddressId,
           ADDRESS_NAME      AS addressName,
           POST_CODE         AS postCode,
           ROAD_ADDRESS      AS roadAddress,
           DETAIL_ADDRESS    AS detailAddress,
           USER_ID           AS userId,
           USER_NAME         AS userName,
           USER_PHONE        AS userPhone,
           IS_DEFAULT        AS isDefault
      FROM USER_ADDRESS
     WHERE USER_ID = #{userId}
  ORDER BY IS_DEFAULT DESC, USER_ADDRESS_ID ASC
  </select>

  <select id="findBookByIsbn" parameterType="string" resultMap="BookWithApiMap">
    SELECT
      b.BOOK_NO, b.BOOK_RDATE, b.BOOK_TRANS, b.BOOK_STOCK, b.BOOK_STATE,
      b.BOOK_CATEGORY, b.isbn AS ISBN, b.BOOK_IMGURL, b.BOOK_INDEX, b.PUBLISHER_BOOK_REVIEW,
      pa.isbn AS API_ISBN, pa.title AS TITLE, pa.author AS AUTHOR, pa.publisher AS PUBLISHER,
      pa.pubdate AS PUBDATE, pa.discount AS DISCOUNT, pa.description AS DESCRIPTION,
      pa.link AS LINK, pa.image AS IMAGE,
      (SELECT COUNT(*) FROM COMMENT c WHERE c.isbn = b.isbn) AS COMMENT_COUNT
    FROM BOOK b
    JOIN PRODUCT_API pa ON b.isbn = pa.isbn
    WHERE b.isbn = #{isbn}
  </select>

  <select id="selectBooksByIsbnList" parameterType="java.util.List" resultMap="BookWithApiMap">
    SELECT
      b.BOOK_NO, b.BOOK_RDATE, b.BOOK_TRANS, b.BOOK_STOCK, b.BOOK_STATE,
      b.BOOK_CATEGORY, b.isbn AS ISBN, b.BOOK_IMGURL, b.BOOK_INDEX, b.PUBLISHER_BOOK_REVIEW,
      pa.isbn AS API_ISBN, pa.title AS TITLE, pa.author AS AUTHOR, pa.publisher AS PUBLISHER,
      pa.pubdate AS PUBDATE, pa.discount AS DISCOUNT, pa.description AS DESCRIPTION,
      pa.link AS LINK, pa.image AS IMAGE,
      (SELECT COUNT(*) FROM COMMENT c WHERE c.isbn = b.isbn) AS COMMENT_COUNT
    FROM BOOK b
    JOIN PRODUCT_API pa ON b.isbn = pa.isbn
    WHERE b.isbn IN
    <foreach item="isbnItem" collection="list" open="(" separator="," close=")">
      #{isbnItem}
    </foreach>
  </select>

  <select id="getOrdersByUserId" parameterType="string" resultMap="OrderResultMap">
    SELECT
      o.ORDER_ID         AS O_ORDER_ID,
      o.ORDER_DATE,
      o.ORDER_STATUS,
      o.TOTAL_PRICE,
      o.ORDER_TYPE,
      o.USER_ID,
      o.GUEST_ID,
      o.CART_NO,
      o.USER_ADDRESS_ID,
      o.RECEIVER_NAME,
      o.RECEIVER_PHONE,
      o.RECEIVER_POST_CODE,
      o.RECEIVER_ROAD_ADDRESS,
      o.RECEIVER_DETAIL_ADDRESS,
      o.DELIVERY_REQUEST,
      o.ORDER_PASSWORD,
      od.ORDER_DETAIL_NO,
      od.ORDER_COUNT,
      od.ORDER_PRICE     AS OD_ORDER_PRICE,
      od.REFUND_CHECK,
      od.BOOK_NO,
      od.ORDER_ID        AS OD_ORDER_ID,
      b.BOOK_NO,
      b.BOOK_RDATE,
      b.BOOK_TRANS,
      b.BOOK_STOCK,
      b.BOOK_STATE,
      b.BOOK_CATEGORY,
      b.isbn             AS BOOK_ISBN,
      b.BOOK_IMGURL,
      b.BOOK_INDEX,
      b.PUBLISHER_BOOK_REVIEW,
      p.isbn             AS API_ISBN,
      p.title            AS TITLE,
      p.author           AS AUTHOR,
      p.publisher        AS PUBLISHER,
      p.pubdate          AS PUBDATE,
      p.discount         AS DISCOUNT,
      p.description      AS DESCRIPTION,
      p.link             AS LINK,
      p.image            AS IMAGE,
      (SELECT COUNT(1) FROM COMMENT c WHERE c.isbn = b.isbn) AS COMMENT_COUNT
    FROM ORDERS o
    LEFT JOIN ORDER_DETAIL od ON o.ORDER_ID = od.ORDER_ID
    LEFT JOIN BOOK         b  ON od.BOOK_NO  = b.BOOK_NO
    LEFT JOIN PRODUCT_API  p  ON b.isbn      = p.isbn
    WHERE o.USER_ID = #{userId}
    ORDER BY o.ORDER_DATE DESC, od.ORDER_DETAIL_NO ASC
  </select>
  
	<select id="getOrdersPaging" parameterType="map" resultMap="OrderResultMap">
    SELECT
      o.ORDER_ID         AS O_ORDER_ID,
      o.ORDER_DATE,
      o.ORDER_STATUS,
      o.TOTAL_PRICE,
      o.ORDER_TYPE,
      o.USER_ID,
      o.GUEST_ID,
      o.CART_NO,
      o.USER_ADDRESS_ID,
      o.RECEIVER_NAME,
      o.RECEIVER_PHONE,
      o.RECEIVER_POST_CODE,
      o.RECEIVER_ROAD_ADDRESS,
      o.RECEIVER_DETAIL_ADDRESS,
      o.DELIVERY_REQUEST,
      o.ORDER_PASSWORD,
      od.ORDER_DETAIL_NO,
      od.ORDER_COUNT,
      od.ORDER_PRICE     AS OD_ORDER_PRICE,
      od.REFUND_CHECK,
      od.BOOK_NO,
      od.ORDER_ID        AS OD_ORDER_ID,
      b.BOOK_NO,
      b.BOOK_RDATE,
      b.BOOK_TRANS,
      b.BOOK_STOCK,
      b.BOOK_STATE,
      b.BOOK_CATEGORY,
      b.isbn             AS BOOK_ISBN,
      b.BOOK_IMGURL,
      b.BOOK_INDEX,
      b.PUBLISHER_BOOK_REVIEW,
      p.isbn             AS API_ISBN,
      p.title            AS TITLE,
      p.author           AS AUTHOR,
      p.publisher        AS PUBLISHER,
      p.pubdate          AS PUBDATE,
      p.discount         AS DISCOUNT,
      p.description      AS DESCRIPTION,
      p.link             AS LINK,
      p.image            AS IMAGE,
      (SELECT COUNT(1) FROM COMMENT c WHERE c.isbn = b.isbn) AS COMMENT_COUNT
    FROM (
      SELECT o.ORDER_ID
      FROM ORDERS o
      WHERE o.USER_ID = #{userId}
      ORDER BY o.ORDER_DATE DESC, o.ORDER_ID DESC
      LIMIT #{perPage} OFFSET #{start}
    ) pg
    JOIN ORDERS o        ON o.ORDER_ID = pg.ORDER_ID
    LEFT JOIN ORDER_DETAIL od ON o.ORDER_ID = od.ORDER_ID
    LEFT JOIN BOOK         b  ON od.BOOK_NO  = b.BOOK_NO
    LEFT JOIN PRODUCT_API  p  ON b.isbn      = p.isbn
    ORDER BY o.ORDER_DATE DESC, od.ORDER_DETAIL_NO ASC
  </select>
	
	<select id="getTotalOrderCount" parameterType="string" resultType="int">
    SELECT COUNT(*) FROM ORDERS WHERE USER_ID = #{userId}
  </select>
  
  <!-- 주문 정보 -->
  <select id="getOrderById" parameterType="int" resultType="com.bookGap.vo.OrderVO">
    SELECT * FROM ORDERS WHERE ORDER_ID = #{orderId}
  </select>

  <!-- 배송지 정보 -->
  <select id="getAddressByOrderId" parameterType="int" resultType="com.bookGap.vo.UserAddressVO">
    SELECT ua.*
    FROM USER_ADDRESS ua
    JOIN ORDERS o ON ua.USER_ADDRESS_ID = o.USER_ADDRESS_ID
    WHERE o.ORDER_ID = #{orderId}
  </select>
  

</mapper>