<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
			"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.bookGap.mapper.orderMapper">

  <!-- Book + ProductApiVO 매핑 -->
  <resultMap id="BookWithApiMap" type="com.bookGap.vo.BookVO">
    <id     property="bookNo"                column="BOOK_NO"/>
    <result property="bookRdate"             column="BOOK_RDATE"/>
    <result property="bookTrans"             column="BOOK_TRANS"/>
    <result property="bookStock"             column="BOOK_STOCK"/>
    <result property="bookState"             column="BOOK_STATE"/>
    <result property="bookCategory"          column="BOOK_CATEGORY"/>
    <result property="isbn"                  column="BOOK_ISBN"/>
    <result property="bookImgUrl"            column="BOOK_IMGURL"/>
    <result property="bookIndex"             column="BOOK_INDEX"/>
    <result property="publisherBookReview"   column="PUBLISHER_BOOK_REVIEW"/>
    <result property="commentCount"          column="COMMENT_COUNT"/>

    <association property="productInfo" javaType="com.bookGap.vo.ProductApiVO">
      <id     property="isbn"          column="API_ISBN"/>
      <result property="title"         column="TITLE"/>
      <result property="author"        column="AUTHOR"/>
      <result property="publisher"     column="PUBLISHER"/>
      <result property="pubdate"       column="PUBDATE"/>
      <result property="discount"      column="DISCOUNT"/>
      <result property="description"   column="DESCRIPTION"/>
      <result property="link"          column="LINK"/>
      <result property="image"         column="IMAGE"/>
    </association>
  </resultMap>

  <!-- Order + Details + Book(ProductApi 포함) -->
  <resultMap id="OrderResultMap" type="com.bookGap.vo.OrderVO">
    <!-- Order -->
    <id     property="orderId"               column="O_ORDER_ID"/>
    <result property="orderDate"             column="ORDER_DATE"/>
    <result property="orderStatus"           column="ORDER_STATUS"/>
    <result property="totalPrice"            column="TOTAL_PRICE"/>
    <result property="orderType"             column="ORDER_TYPE"/>
    <result property="userId"                column="USER_ID"/>
    <result property="guestId"               column="GUEST_ID"/>
    <result property="cartNo"                column="CART_NO"/>
    <result property="userAddressId"         column="USER_ADDRESS_ID"/>
    <result property="receiverName"          column="RECEIVER_NAME"/>
    <result property="receiverPhone"         column="RECEIVER_PHONE"/>
    <result property="receiverPostCode"      column="RECEIVER_POST_CODE"/>
    <result property="receiverRoadAddress"   column="RECEIVER_ROAD_ADDRESS"/>
    <result property="receiverDetailAddress" column="RECEIVER_DETAIL_ADDRESS"/>
    <result property="deliveryRequest"       column="DELIVERY_REQUEST"/>
    <result property="orderPassword"         column="ORDER_PASSWORD"/>

    <!-- Details -->
    <collection property="orderDetails" ofType="com.bookGap.vo.OrderDetailVO">
      <id     property="orderDetailNo" column="ORDER_DETAIL_NO"/>
      <result property="orderCount"    column="ORDER_COUNT"/>
      <result property="orderPrice"    column="OD_ORDER_PRICE"/>
      <result property="refundCheck"   column="REFUND_CHECK"/>
      <result property="bookNo"        column="BOOK_NO"/>
      <result property="orderId"       column="OD_ORDER_ID"/>

      <!-- Book + ProductApi (재사용) -->
      <association property="book" resultMap="BookWithApiMap"/>
    </collection>
  </resultMap>

  <!-- ================= INSERT / UPDATE ================= -->

  <insert id="insertOrder" parameterType="com.bookGap.vo.OrderVO" 
          useGeneratedKeys="true" keyProperty="orderId">
    INSERT INTO ORDERS
    <trim prefix="(" suffix=")" suffixOverrides=",">
      ORDER_DATE,
      ORDER_STATUS,
      TOTAL_PRICE,
      RECEIVER_NAME,
      RECEIVER_PHONE,
      RECEIVER_POST_CODE,
      RECEIVER_ROAD_ADDRESS,
      RECEIVER_DETAIL_ADDRESS,
      DELIVERY_REQUEST,
      ORDER_TYPE,
      <if test="userId != null and userId != ''">
        USER_ID,
        USER_ADDRESS_ID,
      </if>
      <if test="guestId != null and guestId != ''">
        GUEST_ID,
        ORDER_PASSWORD,
      </if>
    </trim>
    VALUES
    <trim prefix="(" suffix=")" suffixOverrides=",">
      NOW(),
      #{orderStatus},
      #{totalPrice},
      #{receiverName},
      #{receiverPhone},
      #{receiverPostCode},
      #{receiverRoadAddress},
      #{receiverDetailAddress},
      #{deliveryRequest},
      #{orderType},
      <if test="userId != null and userId != ''">
        #{userId},
        #{userAddressId},
      </if>
      <if test="guestId != null and guestId != ''">
        #{guestId},
        #{orderPassword},
      </if>
    </trim>
  </insert>

  <insert id="insertOrderDetail" parameterType="com.bookGap.vo.OrderDetailVO">
    INSERT INTO ORDER_DETAIL
      (ORDER_COUNT, ORDER_PRICE, REFUND_CHECK, BOOK_NO, ORDER_ID)
    VALUES
      (#{orderCount}, #{orderPrice}, #{refundCheck}, #{bookNo}, #{orderId})
  </insert>

  <insert id="insertOrderDetailList" parameterType="java.util.List">
    INSERT INTO ORDER_DETAIL
      (ORDER_COUNT, ORDER_PRICE, REFUND_CHECK, BOOK_NO, ORDER_ID)
    VALUES
    <foreach collection="list" item="detail" separator=",">
      (#{detail.orderCount},
       #{detail.orderPrice},
       #{detail.refundCheck},
       #{detail.bookNo},
       #{detail.orderId})
    </foreach>
  </insert>

  <update id="updateBookStock" parameterType="map">
    UPDATE BOOK
       SET BOOK_STOCK = BOOK_STOCK - #{quantity}
     WHERE ISBN = #{isbn}
       AND BOOK_STOCK >= #{quantity}
  </update>

  <!-- ================= SELECTS ================= -->

  <!-- (생략: 주소/책 관련 SELECT는 그대로 유지) -->

  <!-- 비회원 주문 조회 -->
  <select id="findGuestOrderInfo" parameterType="map" resultMap="OrderResultMap">
	  SELECT
	    o.ORDER_ID,
	    o.ORDER_DATE,
	    o.ORDER_STATUS,
	    o.TOTAL_PRICE,
	    g.GUEST_NAME,
	    g.GUEST_PHONE,
	    g.GUEST_EMAIL,
	    o.RECEIVER_NAME,
	    o.RECEIVER_PHONE,
	    o.RECEIVER_POST_CODE,
	    o.RECEIVER_ROAD_ADDRESS,
	    o.RECEIVER_DETAIL_ADDRESS,
	    o.DELIVERY_REQUEST,
	    od.ORDER_DETAIL_NO,
	    od.ORDER_COUNT,
	    od.ORDER_PRICE,
	    b.ISBN,
	    p.TITLE,
	    p.AUTHOR,
	    p.PUBLISHER
	  FROM ORDERS o
	  INNER JOIN GUEST g ON o.GUEST_ID = g.GUEST_ID
	  INNER JOIN ORDER_DETAIL od ON o.ORDER_ID = od.ORDER_ID
	  INNER JOIN BOOK b ON od.BOOK_NO = b.BOOK_NO
	  INNER JOIN PRODUCT_API p ON b.ISBN = p.ISBN
	  WHERE o.ORDER_PASSWORD = #{orderPassword}
	    AND g.GUEST_EMAIL = #{guestEmail}
	</select>
	
<<<<<<< HEAD
	<select id="findGuestOrdersByPasswordAndEmail" parameterType="map" resultMap="OrderResultMap">
	  SELECT
	    o.ORDER_ID,
	    o.ORDER_DATE,
	    o.ORDER_STATUS,
	    o.TOTAL_PRICE,
	    g.GUEST_NAME,
	    g.GUEST_PHONE,
	    g.GUEST_EMAIL,
	    o.RECEIVER_NAME,
	    o.RECEIVER_PHONE,
	    o.RECEIVER_POST_CODE,
	    o.RECEIVER_ROAD_ADDRESS,
	    o.RECEIVER_DETAIL_ADDRESS,
	    o.DELIVERY_REQUEST,
	    od.ORDER_DETAIL_NO,
	    od.ORDER_COUNT,
	    od.ORDER_PRICE,
	    b.ISBN,
	    p.TITLE,
	    p.AUTHOR,
	    p.PUBLISHER
	  FROM ORDERS o
	  INNER JOIN GUEST g ON o.GUEST_ID = g.GUEST_ID
	  INNER JOIN ORDER_DETAIL od ON o.ORDER_ID = od.ORDER_ID
	  INNER JOIN BOOK b ON od.BOOK_NO = b.BOOK_NO
	  INNER JOIN PRODUCT_API p ON b.ISBN = p.ISBN
	  WHERE o.ORDER_PASSWORD = #{orderPassword}
	    AND g.GUEST_EMAIL = #{guestEmail}
	  ORDER BY o.ORDER_DATE DESC
	</select>
=======
	<select id="getTotalOrderCount" parameterType="string" resultType="int">
    SELECT COUNT(*) FROM ORDERS WHERE USER_ID = #{userId}
  </select>
  
  <!-- 주문 정보 -->
  <select id="getOrderById" parameterType="int" resultType="com.bookGap.vo.OrderVO">
    SELECT * FROM ORDERS WHERE ORDER_ID = #{orderId}
  </select>

  <!-- 배송지 정보 -->
  <select id="getAddressByOrderId" parameterType="int" resultType="com.bookGap.vo.UserAddressVO">
    SELECT ua.*
    FROM USER_ADDRESS ua
    JOIN ORDERS o ON ua.USER_ADDRESS_ID = o.USER_ADDRESS_ID
    WHERE o.ORDER_ID = #{orderId}
  </select>
  
>>>>>>> branch 'main' of https://github.com/SongJieunJinny/bookHiatus.git

</mapper>