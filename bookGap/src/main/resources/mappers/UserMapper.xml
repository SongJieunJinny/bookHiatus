<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
			"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.bookGap.mapper.userMapper">
<resultMap id="userInfoResultMap" type="com.bookGap.vo.UserInfoVO">
    <result property="userId" column="USER_ID"/>
    <result property="userName" column="USER_NAME"/>
    <result property="userPhone" column="USER_PHONE"/>
    <result property="userEmail" column="USER_EMAIL"/>
    <result property="userJoinDate" column="USER_JOIN_DATE"/>
    <result property="note" column="NOTE"/>
    <result property="userEnabled" column="USER_ENABLED"/>
    <result property="kakaoId" column="KAKAO_ID"/>
	<result property="oauthProvider" column="OAUTH_PROVIDER"/>
	<result property="userAuthority" column="USER_AUTHORITY"/>
</resultMap>
	<select id="selectOneById" parameterType="String" resultType="java.util.Map">
		SELECT USER_ID,
			  	 USER_PW,
			 		 USER_ENABLED, 
			  	 USER_AUTHORITY,
			  	 USER_STATE,
			  	 USER_NAME,
			     USER_JOIN_DATE,
			  	 USER_PHONE,
			     USER_EMAIL,
			     COMPLAIN_NO
		 FROM  USER  
		 WHERE USER_ID = #{userId} 
	</select>
	
	<insert id="insertUser" parameterType="userInfoVO">
		INSERT INTO USER (
		  USER_ID 
		 ,USER_PW
		 ,USER_ENABLED 
		 ,USER_AUTHORITY 
		 ,USER_NAME 
		 ,USER_PHONE 
		 ,USER_EMAIL 
		 ,USER_JOIN_DATE
		) VALUES (
		 #{userId}
		,#{userPw}
		,1
		,'ROLE_USER'
		,#{userName}
		,#{userPhone}
		,#{userEmail}
		,now()
			);
	</insert>
	
	<insert id="insertUserAddress" parameterType="com.bookGap.vo.UserAddressVO">
	  INSERT INTO USER_ADDRESS (
	    ADDRESS_NAME
	   ,POST_CODE
	   ,ROAD_ADDRESS
	   ,DETAIL_ADDRESS
	   ,IS_DEFAULT
	   ,USER_ID
	   ,USER_NAME
	   ,USER_PHONE
	  ) VALUES (
	    '기본 배송지'     <!-- 회원가입시 첫 주소이므로 '기본 배송지'로 고정 -->
	   ,#{postCode}
	   ,#{roadAddress}
	   ,#{detailAddress}
	   ,1                <!-- 기본 배송지로 설정 (1=기본) -->
	   ,#{userId}
	   ,#{userName}
	   ,#{userPhone}
	  )
  </insert>
	
	<select id="selectAllUser" resultMap="userInfoResultMap">
		SELECT USER_ID, 
					 USER_NAME, 
					 USER_PHONE, 
					 USER_EMAIL, 
					 USER_JOIN_DATE, 
					 USER_ENABLED,
					 NOTE
			FROM USER   
		 ORDER BY USER_JOIN_DATE DESC
	</select>
	
	<select id="findByKakaoId" parameterType="string" resultMap="userInfoResultMap">
	  SELECT * FROM USER WHERE KAKAO_ID = #{kakaoId}
	</select>
	
	<insert id="insertKakaoUser" parameterType="userInfoVO">
	    INSERT INTO USER (
	        USER_ID, USER_NAME, KAKAO_ID, OAUTH_PROVIDER, USER_ENABLED, USER_AUTHORITY, USER_STATE, USER_JOIN_DATE
	    ) VALUES (
	        #{userId}, #{userName}, #{kakaoId}, #{oauthProvider}, #{userEnabled}, #{userAuthority}, #{userState}, now()
	    )
	</insert>
	
	<select id="findById" parameterType="string" resultMap="userInfoResultMap">
	  SELECT * FROM USER WHERE USER_ID = #{userId}
	</select>
	


	<update id="updateUser" parameterType="userInfoVO">
		UPDATE USER
		SET 
			USER_NAME = #{userName},
			USER_PHONE = #{userPhone},
			USER_EMAIL = #{userEmail},
			USER_ENABLED = #{userEnabled},
			NOTE = #{note}
		WHERE USER_ID = #{userId}
	</update>
	

	
	<update id="userPwUpdate" parameterType="com.bookGap.vo.UserInfoVO">
		UPDATE USER 
			 SET USER_PW = #{userPw}
		 WHERE USER_ID = #{userId}
	</update>
	
	<select id="checkUserExists" resultType="int">
    SELECT COUNT(*) FROM USER 
    WHERE USER_ID = #{param1} AND USER_EMAIL = #{param2}
</select>
	
</mapper>
