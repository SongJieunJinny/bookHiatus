<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
			"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.bookGap.mapper.bookMapper">
  <resultMap id="bookDetailMap" type="com.bookGap.vo.BookVO">
	  <!-- BOOK 컬럼들 -->
	  <id     property="bookNo"          column="BOOK_NO"/>
	  <result property="bookRdate"       column="BOOK_RDATE"/>
	  <result property="bookTrans"       column="BOOK_TRANS"/>
	  <result property="bookStock"       column="BOOK_STOCK"/>
	  <result property="bookState"       column="BOOK_STATE"/>
	  <result property="bookCategory"    column="BOOK_CATEGORY"/>
	  <result property="bookImgUrl"      column="BOOK_IMGURL"/>
	  <result property="bookIndex"       column="BOOK_INDEX"/>
	  <result property="publisherBookReview"   column="PUBLISHER_BOOK_REVIEW"/>
	
	  <!-- PRODUCT_API -> productInfo -->
	  <association property="productInfo" javaType="com.bookGap.vo.ProductApiVO">
	    <id     property="isbn"         column="isbn"/>
	    <result property="title"        column="TITLE"/>
	    <result property="author"       column="AUTHOR"/>
	    <result property="publisher"    column="PUBLISHER"/>
	    <result property="description"  column="DESCRIPTION"/>
	    <result property="image"        column="IMAGE"/>
	    <result property="discount"     column="DISCOUNT"/>
	    <result property="pubdate"      column="PUBDATE"/>
	    <result property="link"         column="LINK"/>
	  </association>
	</resultMap>
	<resultMap id="popupSearchResultMap" type="com.bookGap.vo.BookVO">
    <result property="bookNo"     column="bookNo"/>
    <result property="bookImgUrl" column="bookImgUrl"/>
    <result property="title"      column="title"/>
    <result property="author"     column="author"/>
  </resultMap>
	
	 <!-- 도서 등록 -->
		<insert id="insertBook" parameterType="BookVO">
		    INSERT INTO BOOK (BOOK_TRANS, BOOK_CATEGORY, isbn, BOOK_IMGURL, BOOK_INDEX, PUBLISHER_BOOK_REVIEW)
		    VALUES (#{bookTrans}, #{bookCategory}, #{isbn}, #{bookImgUrl}, #{bookIndex}, #{publisherBookReview})
		</insert>

    <!-- 도서 수정 -->
    <update id="updateBook" parameterType="BookVO">
        UPDATE BOOK
        SET BOOK_TRANS = #{bookTrans},
	            BOOK_CATEGORY = #{bookCategory},
	            BOOK_IMGURL = #{bookImgUrl},
	            BOOK_INDEX = #{bookIndex}, 
	            PUBLISHER_BOOK_REVIEW = #{publisherBookReview}
        WHERE BOOK_NO = #{bookNo}
    </update>

    <!-- 도서 삭제 -->
    <delete id="deleteBook" parameterType="int">
        DELETE FROM BOOK WHERE BOOK_NO = #{bookNo}
    </delete>
    <!-- 도서 상세 조회 -->
	<select id="selectBookByNo" parameterType="int" resultType="BookVO">
		SELECT * FROM BOOK WHERE BOOK_NO = #{bookNo}
	</select>
    <!-- 도서 isbn조회 -->
	<select id="isIsbnExists" parameterType="String" resultType="int">
		SELECT COUNT(*) FROM PRODUCT_API WHERE isbn = #{isbn}
	</select>

	 <!-- 도서 목록 조회 -->
	<select id="selectAllBooks" resultType="BookVO">
		SELECT
		   p.title,
		   p.author,
		   b.BOOK_TRANS AS bookTrans,
		   p.publisher,
		   p.isbn,
		   p.discount,
		   b.BOOK_CATEGORY AS bookCategory,
		   p.pubdate,
		   b.BOOK_NO AS bookNo,
		   p.description,
		   p.link,
		   b.BOOK_IMGURL AS bookImgUrl,
		   b.BOOK_INDEX AS bookIndex,
		   b.PUBLISHER_BOOK_REVIEW AS publisherBookReview
		 FROM BOOK b
		 INNER JOIN PRODUCT_API p ON b.isbn = p.isbn
		 ORDER BY b.BOOK_RDATE DESC
	</select>
	
	<select id="selectBooksWithProductInfo" resultType="com.bookGap.vo.ProductApiVO">
		SELECT 
		    p.isbn,
		    p.title,
		    p.image,
		    p.discount
		FROM BOOK b
		INNER JOIN PRODUCT_API p ON b.isbn = p.isbn
	</select>
	
	<select id="selectDistinctCategories" resultType="String">
		SELECT DISTINCT BOOK_CATEGORY FROM BOOK ORDER BY BOOK_CATEGORY ASC
	</select>
	
	<select id="selectBooksByCategory" parameterType="String" resultType="com.bookGap.vo.ProductApiVO">
		SELECT 
		    p.isbn,
		    p.title,
		    p.image,
		    p.discount
		FROM BOOK b
		INNER JOIN PRODUCT_API p ON b.isbn = p.isbn
		WHERE b.BOOK_CATEGORY = #{category}
		ORDER BY b.BOOK_RDATE DESC
	</select>
		
		
	<select id="selectBooksPaging" parameterType="SearchVO" resultType="com.bookGap.vo.ProductApiVO">
		SELECT p.isbn, p.title, p.image, p.discount
		FROM BOOK b
		INNER JOIN PRODUCT_API p ON b.isbn = p.isbn
		ORDER BY b.BOOK_RDATE DESC
		LIMIT #{start}, #{perPage}
	</select>
	
	<select id="getBookTotalCount" parameterType="SearchVO" resultType="int">
		SELECT COUNT(*)
		FROM BOOK b
		INNER JOIN PRODUCT_API p ON b.isbn = p.isbn
	</select>
	
	<select id="selectBooksByCategoryPaging" parameterType="SearchVO" resultType="com.bookGap.vo.ProductApiVO">
		SELECT p.isbn, p.title, p.image, p.discount
		FROM BOOK b
		INNER JOIN PRODUCT_API p ON b.isbn = p.isbn
		WHERE b.BOOK_CATEGORY = #{category}
		ORDER BY b.BOOK_RDATE DESC
		LIMIT #{start}, #{perPage}
	</select>
	
	<select id="getBookTotalCountByCategory" parameterType="SearchVO" resultType="int">
		SELECT COUNT(*)
		FROM BOOK b
		INNER JOIN PRODUCT_API p ON b.isbn = p.isbn
		WHERE b.BOOK_CATEGORY = #{category}
	</select>
	
	<select id="selectBookDetailByIsbn" parameterType="String" resultMap="bookDetailMap">
	  SELECT
	    b.BOOK_NO        AS BOOK_NO,
	    b.BOOK_RDATE     AS BOOK_RDATE,
	    b.BOOK_TRANS     AS BOOK_TRANS,
	    b.BOOK_STOCK     AS BOOK_STOCK,
	    b.BOOK_STATE     AS BOOK_STATE,
	    b.BOOK_CATEGORY  AS BOOK_CATEGORY,
	    b.BOOK_IMGURL    AS BOOK_IMGURL,
	    b.BOOK_INDEX     AS BOOK_INDEX,
	    b.PUBLISHER_BOOK_REVIEW AS PUBLISHER_BOOK_REVIEW,
	    p.isbn           AS isbn,
	    p.title          AS TITLE,
	    p.author         AS AUTHOR,
	    p.publisher      AS PUBLISHER,
	    p.description    AS DESCRIPTION,
	    p.image          AS IMAGE,
	    p.discount       AS DISCOUNT,
	    p.pubdate        AS PUBDATE,
	    p.link           AS LINK
	  FROM PRODUCT_API p
	  JOIN BOOK b ON p.isbn = b.isbn
	  WHERE p.isbn = #{isbn}
	</select>
	
	<select id="adminInventoryManagementSelectAll"   resultType="BookVO" >
		SELECT
			   p.title,
			   p.isbn,
			   b.BOOK_STOCK AS bookStock,
			   b.BOOK_NO AS bookNo,
			   b.BOOK_STATE AS bookState
			FROM BOOK b
			INNER JOIN PRODUCT_API p ON b.isbn = p.isbn
			ORDER BY  b.BOOK_RDATE DESC
	</select>
	
	<select id="getBookNoByIsbn" parameterType="String" resultType="int">
	  SELECT BOOK_NO FROM BOOK WHERE isbn = #{isbn}
	</select>
	
	<update id="updateInventory" parameterType="BookVO">
	  UPDATE book
	  <set>
	    <if test="bookStock != null">
	      book_stock = #{bookStock}
	      <if test="bookState != null">,</if>
	    </if>
	    <if test="bookState != null">
	      book_state = #{bookState}
	    </if>
	  </set>
	  WHERE book_no = #{bookNo}
	</update>
	
	<select id="getNewBooks" resultType="com.bookGap.vo.ProductApiVO">
	  SELECT p.isbn, p.title, p.image, p.discount
	  FROM BOOK b
	  INNER JOIN PRODUCT_API p ON b.isbn = p.isbn
	  ORDER BY b.BOOK_RDATE DESC
	  LIMIT 9
	</select>
	
	<!-- 제목 또는 저자명으로 도서 검색 -->
	<select id="searchBooksByKeyword" parameterType="com.bookGap.vo.SearchVO" resultType="com.bookGap.vo.ProductApiVO">
	  SELECT p.isbn, p.title, p.image, p.discount
	    FROM BOOK b
INNER JOIN PRODUCT_API p ON b.isbn = p.isbn
	   WHERE (p.title LIKE CONCAT('%', #{searchValue}, '%') OR p.author LIKE CONCAT('%', #{searchValue}, '%'))
	ORDER BY b.BOOK_RDATE DESC
	   LIMIT #{start}, #{perPage}
	</select>
	
	<!-- 제목 또는 저자명으로 검색된 도서의 전체 개수 조회 -->
	<select id="getBookTotalCountByKeyword" parameterType="com.bookGap.vo.SearchVO" resultType="int">
	  SELECT COUNT(*)
	    FROM BOOK b
INNER JOIN PRODUCT_API p ON b.isbn = p.isbn
	  WHERE (p.title LIKE CONCAT('%', #{searchValue}, '%') OR p.author LIKE CONCAT('%', #{searchValue}, '%'))
	</select>
	
	
	<select id="selectPopularBooks" parameterType="SearchVO" resultType="com.bookGap.vo.ProductApiVO">
	  SELECT 
	    p.isbn,
	    p.title,
	    p.image,
	    p.discount,
	    IFNULL(SUM(od.ORDER_COUNT), 0) AS total_sales
	  FROM BOOK b
	  JOIN PRODUCT_API p ON b.isbn = p.isbn
	  LEFT JOIN ORDER_DETAIL od ON od.BOOK_NO = b.BOOK_NO
	  GROUP BY p.isbn
	  ORDER BY total_sales DESC
	  LIMIT #{start}, #{perPage}
	</select>
	
	<select id="searchBooksForPopup" parameterType="String" resultMap="popupSearchResultMap">
    SELECT b.BOOK_NO        AS bookNo,
           p.IMAGE          AS bookImgUrl,
           p.TITLE          AS title,
           p.AUTHOR         AS author
      FROM BOOK b
     INNER JOIN PRODUCT_API p ON b.isbn = p.isbn
     WHERE p.title LIKE CONCAT('%', #{keyword}, '%') 
        OR p.author LIKE CONCAT('%', #{keyword}, '%')
     ORDER BY p.title ASC
     LIMIT 20
  </select>
	
</mapper>